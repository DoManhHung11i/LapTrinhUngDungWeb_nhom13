<div class="container">
    <div>
        {{#each esposidesObjects}}
        <div class="episode">
            <div class="jsxepisode" data-audio-url="{{this.audio_url}}">
                <div class="wrapp_art" >
                    <img src="{{this.image}}" alt="three" width="200" height="200" loading="lazy" class="jsx_art">
                    <div class="playing"></div>
                    <div class="pause">
                        <svg stroke="currentColor" fill="currentColor" stroke-width="0"  height="1em" width="1em" xmlns="http:www.w3.org/2000/svg"><path d="M424.4 214.7L72.4 6.6C43.8-10.3 0 6.1 0 47.9V464c0 37.5 40.7 60.1 72.4 41.3l352-208c31.4-18.5 31.5-64.1 0-82.6z"></path>
                        </svg>
                    </div>
                </div>
        
                <div class="meta">
                    <div class="meta_top">
                        <div class="meta_title">
                            <a class="episode_title" style="color:antiquewhite" href="/podcast/{{this.podcast_id}}/{{this._id}}" data-esposide-id="{{this._id}}" data-user-id="{{../user._id}}"><u>{{this.title}}</u></a>
                        </div>
                        <div class="meta_description">{{this.description}}</div>
                    </div>
                </div>
                <div class="infor_bar">
                    <div class="duration">{{this.duration}}</div>
                </div>
                </div>
            <div class="unit_wrapp" style="border-bottom: 2px solid rgb(7, 70, 75);">
        </div>
        {{/each}}
    </div>
</div>
<footer style="display: none;">
    <div class="audio-player" data-audio-url="">
    
        <audio id="audio-player" controls>
            Your browser does not support the audio element.
        </audio>
        <div class="controls">
            <button id="backward-btn" title="Backward 5s">⏪</button>
            <button id="play-pause-btn" title="Play/Pause">▶️</button>
            <button id="forward-btn" title="Forward 5s">⏩</button>
            
        </div>
        <div class="song-info">
            <img src="" alt="Song Image">
            <h3></h3>
        </div>        
    </div>
</footer>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const audioPlayer = document.getElementById('audio-player');
        const footer = document.querySelector('footer');
        const playPauseBtn = document.getElementById('play-pause-btn');
        const backwardBtn = document.getElementById('backward-btn');
        const forwardBtn = document.getElementById('forward-btn');
        const episodeLinks = document.querySelectorAll('.jsxepisode');
        const songImage = document.querySelector('.song-info img');
        const songTitle = document.querySelector('.song-info h3');
        let currentEpisodeIndex = 0;


        function playEpisode(index) {
            footer.style.display = 'block';
            const episode = episodeLinks[index];
            const audioUrl = episode.getAttribute('data-audio-url');
            const image = episode.querySelector('img').getAttribute('src');
            const title = episode.querySelector('.meta_title a').innerText;
            
            audioPlayer.src = audioUrl;
            audioPlayer.play();
            playPauseBtn.textContent = '⏸️';
            
            songImage.src = image;
            songTitle.innerText = title;

            currentEpisodeIndex = index;
        }

        function playNextEpisode() {
            currentEpisodeIndex = (currentEpisodeIndex + 1) % episodeLinks.length;
            playEpisode(currentEpisodeIndex);
        }

        audioPlayer.addEventListener('ended', playNextEpisode);

        episodeLinks.forEach((link, index) => {
            link.addEventListener('click', function (event) {
                event.preventDefault();
                playEpisode(index);
            });
        });

        playPauseBtn.addEventListener('click', () => {
            if (audioPlayer.paused) {
                audioPlayer.play();
                playPauseBtn.textContent = '⏸️';
            } else {
                audioPlayer.pause();
                playPauseBtn.textContent = '▶️';
            }
        });

        backwardBtn.addEventListener('click', () => {
            audioPlayer.currentTime = Math.max(audioPlayer.currentTime - 5, 0);
        });

        forwardBtn.addEventListener('click', () => {
            audioPlayer.currentTime = Math.min(audioPlayer.currentTime + 5, audioPlayer.duration);
        });
    });



</script>