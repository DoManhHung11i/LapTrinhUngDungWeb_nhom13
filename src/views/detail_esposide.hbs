<div class="container">
    <div class="container_sidebar">
        <img src="{{podcast.image}}" alt="">
          <p style="font-size: 18px; font-weight: 600; color: aliceblue;">{{podcast.title}}</p>
          <p style="color: #4DAEE8;">{{podcast.name_author}}</p>
          <div class="container_sidebar-text">
            <details>
              <summary> Show Description </summary>
              <span>{{podcast.description}}</span>
            </details>
            </div>  
          <p style="color: rgb(153, 153, 153); font-weight: 700;font-size: 12px;letter-spacing: 0.5px; margin-bottom: 5px; margin-left: 5px;">SHARE</p>
          <div class="container_sidebar-socialIcons">
            <a href="https://www.instagram.com/" target="_blank"><i class="fa-brands fa-instagram"></i></a>
            <a href="https://www.twitter.com/" target="_blank"><i class="fa-brands fa-twitter"></i></a>
            <a href="https://www.facebook.com/" target="_blank"><i class="fa-brands fa-facebook"></i></a>
          </div>
          <div class="container_sidebar-footertext">
            <p style="margin-bottom: 10px;">&copy 2024 {{podcast.name_author}}</p>
            <p>All content for Three is the property of {{podcast.name_author}} and is served directly from their servers with no modification, redirects, or rehosting. The podcast is not affiliated with or endorsed by Podbay in any way.</p>
          </div>
    </div>
    <div class="container_headbar">
        <ul class="container_headbar-list">
            <a href="playlist.html"><li class="container_headbar-item" style="border: 1px solid #333; background-color: #333;">Episodes</li></a>
            <a href="about.html"><li class="container_headbar-item">About</li></a>  
            <a href="/podcast/{{podcast._id}}/reviews"><li class="container_headbar-item">Reviews</li></a>
            <a href="calendar.html"><li class="container_headbar-item">Calendar</li></a>
            <a href="#"><li class="container_headbar-item">Claim And Verify</li></a>
          </ul>
    </div>
    <div class="container_body">
            <div class="container_body_img">
              <a href="">
                <img src="{{podcast.image}}" alt=""> 
                <i class="fa-solid fa-play" style="color: #fff; font-size: 3em;"></i>
              </a>
            </div>
            <div class="container_body-title">
              <p>
                <strong style="color: #fff;">{{esposide.title}}</strong>
                <p style="color: #333; font-size: 14px; font-weight: 600;">{{esposide.formattedDate}}</p>
              </p>
              <div class="container_body_musicPlayer">
                <!-- <i class="fa-solid fa-volume-low"></i> -->
              </div>
            </div>
            <div class="container_body_feature">
              <ul class="container_body_feature-list" style="list-style-type: none;">
                <li><button class="container_button container_body_feature-item" id="addToQueuebtn" data-esposide-id="{{esposide._id}}" data-user-id="{{user._id}}" data-action="addToQueue">Add to My Queue</button></li>
                <li><button class="container_button container_body_feature-item" id="addToMyPodcastbtn" data-esposide-id="{{esposide._id}}" data-user-id="{{user._id}}" data-action="addToMyPodcast">Add To My Podcast</button></li>
                <li><button class="container_button container_body_feature-item">Share</button></li>
              </ul>
            </div>
            <form action="">
              <fieldset style="border-radius: 5px;border: 0.5px solid #70b8ef">
                  <legend style="font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace;font-size: 16px;margin: 4px;color: #ccc;font-weight: 600;text-transform: uppercase;">
                      review
                  </legend>
                  <div class="container_body_review">
                      {{#each lastFourComments}}
                          <div class="container_body_review-item">
                              <div class="container_body_review-title">{{this.title}}</div>
                              <div class="container_body_review-content">{{this.content}}</div>
                              <div class="container_body_review-name" style="font-weight: bold; color: aqua; text-decoration:underline">{{this.username}}</div>
                          </div>
                      {{/each}}
                  </div>
                  <a href="/podcast/{{podcast._id}}/reviews">
                    <div class="container_body_review_next">
                      <i class="fa-solid fa-angles-down"></i>
                    </div>
                  </a>
              </fieldset>
          </form>
            <hr style="margin-top: 60px;">
            <div class="container_body_prev_next">
            <a href="Bear-Brook_esposide2.html">
              <div class="container_body_prev_next-item">
                <div class="container_body_pre_next-item-img">
                  <img src="{{podcast.image}}" alt="">
                </div>
              <div class="container_body_prev_next-item-text">
                <div class="container_body_pre_next-item-text-direct">
                  <p>previous</p>
                </div>
                <div class="container_body_pre_next-item-text-title">
                  <p>Episode 2: The Pursuit</p>
                </div>
              </div>
            </div>
            </a>
            <a href="Bear-Brook_Bonus.html">
              <div class="container_body_prev_next-item">
              <div class="container_body_pre_next-item-img">
                <img src="{{podcast.image}}" alt="">
              </div>
              <div class="container_body_prev_next-item-text">
                <div class="container_body_pre_next-item-text-direct">
                  <p>next</p>
                </div>
                <div class="container_body_pre_next-item-text-title">
                  <p>Bonus: ‘Crime Story’</p>
                </div>
              </div>
            </div>
            </a>
        </div>
        <footer>
          <div class="audio-player" data-audio-url="{{esposide.audio_url}}">
            <audio id="audio-player" controls>
              Your browser does not support the audio element.
            </audio>
            <div class="controls">
              <button id="backward-btn" title="Backward 5s">⏪</button>
              <button id="play-pause-btn" title="Play/Pause">▶️</button>
              <button id="forward-btn" title="Forward 5s">⏩</button>
              
            </div>
            <div class="song-info">
              <img src="{{podcast.image}}" alt="Song Image">
              <h3>{{podcast.title}}</h3>
            </div>
          </div>
        </footer>
          <script>
            document.addEventListener("DOMContentLoaded", function() {
                updateButtonContent();
            });
          </script>
            <script>
              document.addEventListener("DOMContentLoaded", function() {
              const backwardBtn = document.getElementById("backward-btn");
              const playPauseBtn = document.getElementById("play-pause-btn");
              const forwardBtn = document.getElementById("forward-btn");
              const audioPlayer = document.getElementById("audio-player");

              const audioUrl = document.querySelector('.audio-player').getAttribute('data-audio-url');
              // Set the source URL for the audio element
              audioPlayer.src = audioUrl;

              backwardBtn.addEventListener("click", function() {
                audioPlayer.currentTime -= 5; // Move backward 5 seconds
              });

              playPauseBtn.addEventListener("click", function() {
                if (audioPlayer.paused) {
                  audioPlayer.play(); // If paused, play
                  playPauseBtn.textContent = "⏸"; // Change button display to pause
                } else {
                  audioPlayer.pause(); // If playing, pause
                  playPauseBtn.textContent = "▶️"; // Change button display to play
                }
              });

              forwardBtn.addEventListener("click", function() {
                audioPlayer.currentTime += 5; // Move forward 5 seconds
              });
            });
            </script>
            <script>
              const audioPlayer = document.querySelector('.audio-player');
              const navbar = document.querySelector('.navbar');
          
              window.addEventListener('scroll', () => {
                if (window.scrollY > 0) {
                  audioPlayer.classList.add('visible');
                } else {
                  audioPlayer.classList.remove('visible');
                }
              });
            </script>
            <script>
              async function updateButtonContent() {
                const containers = document.querySelectorAll('.container_body_feature-item');
                console.log(containers);
                containers.forEach(container => {
                    const button = container;
                    console.log(button);
                    if (button) {
                        let userId, esposideId, action;
                        if (button.id === 'addToQueuebtn' || button.id === 'addToMyPodcastbtn') {
                            userId = button.getAttribute('data-user-id');
                            esposideId = button.getAttribute('data-esposide-id');
                            action = button.getAttribute('data-action');

                            if (!userId) {
                                if (button.id === 'addToQueuebtn') {
                                    button.textContent = "Add to queue";
                                } else if (button.id === 'addToMyPodcastbtn') {
                                    button.textContent = "Add to MyPodcast";
                                }
                            } else {
                                fetch(`/podcast/check-QueueOrMyPodcast`, {
                                    method: 'post',
                                    body: JSON.stringify({ esposideId, userId, action }),
                                    headers: {'Content-Type': 'application/json'}
                                })
                                .then(response => response.json())
                                .then(data => {
                                    if (data.found) {
                                        if (data.action === 'addToQueue') {
                                            button.textContent = "Remove from queue";
                                        } else if (data.action === 'addToMyPodcast') {
                                            button.textContent = "Remove from MyPodcast";
                                        }
                                    } else {
                                        if (data.action === 'addToQueue') {
                                            button.textContent = "Add to queue";
                                        } else if (data.action === 'addToMyPodcast') {
                                            button.textContent = "Add to MyPodcast";
                                        }
                                    }
                                })
                                .catch(error => {
                                    console.error('Error:', error);
                                });
                            }
                        }
                    }
                });
            }
            </script>
            <script>
                document.addEventListener('click', async function(event) {
                    const container = event.target.closest('.container_body_feature-item');
                    if (container) {
                        const button = event.target.closest('button');
                        if (button) {
                          let userId, esposideId, action;
                          if (button.id === 'addToQueuebtn') {
                              // Xử lý khi click vào nút 'Add to Queue'
                              userId = button.getAttribute('data-user-id');
                              esposideId = button.getAttribute('data-esposide-id');
                              action = button.getAttribute('data-action');
                          } else if (button.id === 'addToMyPodcastbtn') {
                              // Xử lý khi click vào nút 'Add to My Podcast'
                              userId = button.getAttribute('data-user-id');
                              esposideId = button.getAttribute('data-esposide-id');
                              action = button.getAttribute('data-action');                              
                          }
                          if(userId){
                            const res = await fetch(`/podcast/check-QueueOrMyPodcast`, {
                              method: 'post',
                              body: JSON.stringify({ esposideId, userId, action }),
                              headers:  {'Content-Type': 'application/json'}
                            });
                            const data = await res.json();
                            console.log(data);
                            if(data.found){
                              const res =  await fetch('/podcast/remove-from-QueueOrMyPodcast', {
                                  method: 'POST',
                                  headers: {
                                      'Content-Type': 'application/json'
                                  },
                                  body: JSON.stringify({ esposideId, userId, action })
                              });
                              const data = await res.json();
                              console.log(data);
                              if(data.deleted){
                                if(data.message === 'Esposide removed from queue'){
                                  button.textContent = 'Add to Queue';
                                }
                                else if(data.message === 'Esposide removed from MyPodcast'){
                                  button.textContent = 'Add to MyPodcast'
                                }
                              }
                            }
                            else {
                              const res = await fetch('/podcast/add-to-QueueOrMyPodcast', {
                                          method: 'POST',
                                          headers: {
                                              'Content-Type': 'application/json'
                                          },
                                          body: JSON.stringify({ esposideId, userId, action })
                                      });
                              const data = await res.json();
                              console.log(data);
                              if(data.saved){
                                if(data.message === 'Esposide added to queue'){
                                  button.textContent = 'Remove From Queue';
                                }
                                else if(data.message === 'Esposide added to My Podcast'){
                                  button.textContent = 'Remove From MyPodcast'
                                }
                              }
                            }
                          }  
                          else{
                            alert("Login to use this feature");
                            window.location.href = '/login';
                          }
                        }
                    }
                });
            </script>
</div>